# docker-compose.yml
services:
  db:
    image: timescale/timescaledb-ha:pg16-all
    container_name: graz_transport_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - graz_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - transport_network

  fetcher:
    build:
      context: ./fetcher
    container_name: graz_transport_fetcher
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
    networks:
      - transport_network

  api:
    build:
      context: ./api
    container_name: graz_transport_api
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "3001:3001"
    networks:
      - transport_network

  web:
    build:
      context: ./web
    container_name: graz_transport_web
    depends_on:
      - api
    networks:
      - transport_network

  adminer:
    image: adminer
    container_name: graz_transport_adminer
    ports:
      - "8080:8080"
    networks:
      - transport_network
    depends_on:
      db:
        condition: service_healthy

networks:
  transport_network:
    driver: bridge

volumes:
  graz_db_data:
    driver: local